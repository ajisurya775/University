@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<University.Models.Student>
@{
    ViewData["Title"] = "Students";
}

<h2>Students</h2>

<div class="d-flex justify-content-between">
    <a asp-action="create" class="btn btn-primary">Add</a>
    <form asp-action="Index" method="get">
        <p>
            Find by name:
            <input type="search" name="keyword" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary btn-sm" />
        </p>
    </form>
</div>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Last Name</th>
            <th>First Name</th>
            <th>Enrollment Date</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.LastName</td>
                <td>@item.FirstMidName</td>
                <td>@item.EnrollmentDate.ToString("yyyy-MM-dd")</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <form asp-action="Destroy" asp-route-id="@item.ID" method="post" style="display:inline">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-link"
                            onclick="return confirm('Are you sure you want to delete this student?');">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-end">
    @Html.PagedListPager(
    Model,
    page => Url.Action("Index", new { page, searchString = ViewData["CurrentFilter"] }),
        new X.PagedList.Web.Common.PagedListRenderOptions
        {
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
            UlElementClasses = new[] { "pagination", "gap-2" },
            DisplayLinkToPreviousPage = X.PagedList.Web.Common.PagedListDisplayMode.Always,
            DisplayLinkToNextPage = X.PagedList.Web.Common.PagedListDisplayMode.Always,
            MaximumPageNumbersToDisplay = 5
        }
        )
</div>
